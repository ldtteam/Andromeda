image:
  repository: jetbrains/teamcity-server
  tag: latest
  pullPolicy: Always
  imagePullSecrets: []

replicas: 3

## Teamcity deployed by StateFulSet
## @param teamcity.resources default value for all nodes in sts
teamcity:
  resources:
    requests:
      cpu: 100m
      memory: 2048Mi
  ## @param teamcity.env default values for all nodes in sts
  env:
    TEAMCITY_SERVER_MEM_OPTS: -Xms2g -Xmx4g
    POD_NAME:
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
  startupProbe: ~
  livenessProbe:
    httpGet:
      path: /healthCheck/healthy
      port: http
      scheme: HTTP
    failureThreshold: 3
    periodSeconds: 30
  readinessProbe:
    httpGet:
      path: /healthCheck/ready
      port: http
      scheme: HTTP
    failureThreshold: 2
    periodSeconds: 10
  ports:
  - containerPort: 8111
    name: http
    protocol: TCP
  affinity: {}
  tolerations: {}
  topologySpreadConstraints: {}

pdb:
  enabled: true
  minAvailable: 1

pvc:
  name: teamcity-server-data
  annotations:
    helm.sh/resource-policy: keep
  storageClassName: longhorn
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi

## Create & Mount PVC for /opt/teamcity directories
## Defaults to emptyDir
## Generated by STS PVC Template - volume per node
ephemeral:
  cache:
    enabled: true
    annotations: {}
    storageClassName: efs
    accessModes:
      - ReadWriteMany
    resources:
      requests:
        storage: 16Gi

database:
  host: "127.0.0.1"
  name: "teamcity"
  user: "teamcity"
  password: "password"

configMap:
  datadirConfig:
    database.mysql.properties: |
      connectionUrl=jdbc\:mysql\://{{ $.Values.database.host }}/{{ $.Values.database.name}}?allowPublicKeyRetrieval=true&useSSL=false
      connectionProperties.user={{ $.Values.database.user }}
      connectionProperties.password={{ $.Values.database.password }}

      # This option, when set to "true",
      # allows reducing memory usage on large query results.
      # Should only be used if the jdbc driver version is higher than 5.0.6.
      # connectionProperties.useCursorFetch=true

      # The maximum number of connections TeamCity can open on a database server.
      maxConnections=50

      # Specifies whether TeamCity should check each jdbc connection before use.
      # It reduces the system performance but avoids cases when the system uses
      # a connection that was closed by the database server due to a time-out or this
      # connection was broken during the previous operation.
      innodb_buffer_pool_size=2000M
      innodb_log_file_size=1024M
      innodb_flush_log_at_trx_commit=2
    database.properties: |
      connectionUrl=jdbc\:mysql\://{{ $.Values.database.host }}/{{ .Values.database.name}}?allowPublicKeyRetrieval=true&useSSL=false
      connectionProperties.user={{ $.Values.database.user }}
      connectionProperties.password={{ $.Values.database.password }}
      maxConnections=50
  optConf:
    server.xml: |-
      <?xml version="1.0" encoding="UTF-8"?>
      <Server port="8105" shutdown="SHUTDOWN">
        <Listener className="org.apache.catalina.startup.VersionLoggerListener" />
        <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
        <!-- Prevent memory leaks due to use of particular java/javax APIs-->
        <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
        <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
        <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />
        <GlobalNamingResources>
          <Resource name="UserDatabase" auth="Container" type="org.apache.catalina.UserDatabase" description="User database that can be updated and saved" factory="org.apache.catalina.users.MemoryUserDatabaseFactory" pathname="conf/tomcat-users.xml" />
        </GlobalNamingResources>
        <Service name="Catalina">
          <Connector port="8111" protocol="org.apache.coyote.http11.Http11NioProtocol" connectionTimeout="60000" redirectPort="8543" useBodyEncodingForURI="true" tcpNoDelay="1" />
          <Engine name="Catalina" defaultHost="localhost">
            <Realm className="org.apache.catalina.realm.LockOutRealm">
              <Realm className="org.apache.catalina.realm.UserDatabaseRealm" resourceName="UserDatabase" />
            </Realm>
            <Host name="localhost" appBase="webapps" unpackWARs="true" autoDeploy="true">
              <Valve className="org.apache.catalina.valves.ErrorReportValve" showReport="false" showServerInfo="false" />
              <Valve className="org.apache.catalina.valves.RemoteIpValve" remoteIpHeader="x-forwarded-for" protocolHeader="x-forwarded-proto" portHeader="x-forwarded-port" />
            </Host>
          </Engine>
        </Service>
      </Server>
